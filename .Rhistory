library(httr)
req = GET("https://github.com/pcm-dpc/COVID-19/tree/master/")
stop_for_status(req)
filelist = unlist(lapply(content(req)$tree, "[", "path"), use.names = F)
grep("dati-andamento-nazionale/", filelist, value = TRUE, fixed = TRUE)
content(req)$tree
req = GET("https://github.com/pcm-dpc/COVID-19/tree/master/dati-andamento-nazionale/")
stop_for_status(req)
filelist = unlist(lapply(content(req)$tree, "[", "path"), use.names = F)
grep("dati-andamento-nazionale/", filelist, value = TRUE, fixed = TRUE)
content(req)$tree
content(req)
library(rvest)
url = "https://github.com/pcm-dpc/COVID-19/tree/master/dati-andamento-nazionale/"
webpage = read_html(url)
csv_files = webpage %>%
html_nodes(xpath = "//ul/li/a") %>%
html_text2()
csv_files
webpage = read_html(url)
csv_files = webpage %>%
html_nodes(xpath = "//ul/li/a") %>%
html_attr("href")
csv_files
csv_files = webpage %>%
html_table()
csv_files
webpage %>%
html_table() |>
pluck(1)
library(tidyverse)
csv_files = webpage %>%
html_table() |>
pluck(1)
View(csv_files)
webpage |>
html_table() |>
pluck(1) |>
select(1) |>
View()
csv_files = webpage |>
html_table() |>
pluck(1) |>
select(1) |>
View() |>
janitor::clean_names() |>
filter(name != "parent directory..")
csv_files = webpage |>
html_table() |>
pluck(1) |>
select(1) |>
janitor::clean_names() |>
filter(name != "parent directory..")
View(csv_files)
csv_files = webpage |>
html_table() |>
pluck(1) |>
select(1) |>
janitor::clean_names() |>
filter(name != ".csv")
csv_files = webpage |>
html_table() |>
pluck(1) |>
select(1) |>
janitor::clean_names() |>
filter(grepl(".csv", name) == TRUE)
base_url = "https://raw.githubusercontent.com/pcm-dpc/COVID-19/refs/heads/master/dati-andamento-nazionale/dpc-covid19-ita-andamento-nazionale-"
df = read_csv(paste0(base_url, "20241019", ".csv"))
df = read_csv(paste0(base_url, "20241018", ".csv"))
df = read_csv(paste0(base_url, "20241017", ".csv"))
df = read_csv(paste0(base_url, "20241018", ".csv"))
df = read_csv(paste0(base_url, "20200224", ".csv"))
View(df)
# Define the start and end dates
start_date = as.Date("2020-02-24")
end_date   = as.Date("2024-10-18")
# Generate the sequence of dates
date_vector = seq(from = start_date, to = end_date, by = "day")
date_vector = format(date_vector, "%Y%m%d")
library(data.table)
detach(data.tabel)
detach(data.table)
detach("data.table")
detach("package:data.table", unload = TRUE)
n = c(1:length(date_vector))
df = read_csv(paste0(base_url, "20241017", ".csv"))
for(i in 1:length(date_vector)){
tryCatch(
{
df = read_csv(paste0(base_url, "20241017", ".csv"))
national_data = data.table::rbindlist(list(national_data, df))
},
error=function(e) {
print(date_vector[i])
}
)
}
#create empty list with national data
national_data = list()
for(i in 1:length(date_vector)){
tryCatch(
{
df = read_csv(paste0(base_url, date_vector[i], ".csv"))
national_data = data.table::rbindlist(list(national_data, df))
},
error=function(e) {
print(date_vector[i])
}
)
}
View(national_data)
setwd("C:/Users/ronal/OneDrive/Manuscritos/HS_snparray/HS_italia/PRS_new_analysis")
library(readxl)
library(tidyverse)
library(skimr)
library(pROC)
library(ggplot2)
library(patchwork)
library(cowplot)
library(ggsignif)
library(rstatix)
library(ggpubr)
library(plotly)
library(gtsummary)
library(RColorBrewer)
library(pROC)
load("C:/Users/ronal/OneDrive/Manuscritos/HS_snparray/HS_italia/PRS_new_analysis/l_fit.Rdata")
load("C:/Users/ronal/OneDrive/Manuscritos/HS_snparray/HS_italia/PRS_new_analysis/l_data.Rdata")
load("C:/Users/ronal/OneDrive/Manuscritos/HS_snparray/HS_italia/PRS_new_analysis/l_files.Rdata")
# df_lassosum = read_rds("C:/Users/ronal/OneDrive/Manuscritos/HS_snparray/HS_italia/PRS/df_lassosum.rsd")
# fit_lassosum = read_rds("C:/Users/ronal/OneDrive/Manuscritos/HS_snparray/HS_italia/PRS/fit_lassosum_cov.rsd")
fit_plink_0_001 = l_fit[[4]]
df_plink_0_001 = l_data[[4]]
phenodata = read_excel("C:/Users/ronal/OneDrive/Manuscritos/HS_snparray/phenodata 11nov23.xlsx",
sheet = "pheno_data")
plink_fam = read_excel("C:/Users/ronal/OneDrive/Manuscritos/HS_snparray/phenodata 11nov23.xlsx",
sheet = "QC_fam solo pz")
dataset = plink_fam %>%
left_join(., phenodata, by = "IID") %>%
select(FID, IID, sex.y, insorgenza:commorbidities, age_diagnosis) %>%
rename(sex = sex.y) %>%
mutate(age_diagnosis = as.integer(age_diagnosis)) %>%
mutate(sex = ifelse(sex == 1, "male", "female")) %>%
mutate(sex = fct_relevel(sex, c("male", "female"))) %>%
mutate(smoke = tolower(smoke)) %>%
mutate(severity = tolower(severity)) %>%
mutate(smoke = fct_relevel(smoke, c("No", "Yes","Ex"))) %>%
mutate(severity = fct_relevel(severity, c("Mild", "Moderate","Severe"))) %>%
filter(!sindromico %in% c("diagnosi dubbia da eliminare","sono PG")) %>%
mutate(sindromico = fct_relevel(sindromico, c("HS sporadic case",
"HS syndromic case",
"HS familiar case"))) %>%
mutate(insorgenza = as.numeric(insorgenza)) %>%
mutate(age = as.numeric(age)) %>%
mutate(delay_diag = age_diagnosis - insorgenza) %>%
mutate(BMI = as.numeric(BMI)) %>%
mutate(onset_categ = ifelse(insorgenza < 18, "early", "late")) %>%
mutate(comorbidade = case_when(commorbidities == "No" ~ "no",
commorbidities != "No" ~ "yes",
is.na(commorbidities) ~ NA)) %>%
left_join(., df_plink_0_001[,c(2,3)], by = "IID")
#predict the values for the model
pred = data.frame(predict(fit_plink_0_001, type = "response"))
pred$rownames = row.names(pred)
df_plink_0_001$rownames = row.names(df_plink_0_001)
df_plink_0_001 = df_plink_0_001 %>%
left_join(., pred, by = "rownames") %>%
rename(prediction = 15) %>%
mutate(PHENOTYPE = fct_relevel(PHENOTYPE, c("CTRL","CASES")))
dataset = dataset %>%
left_join(. , df_plink_0_001[,c(2,6:8,14)], by = "IID") |>
rename(PGS = SCORE)
View(dataset)
View(df_plink_0_001)
df_plink_0_001 %>%
ggplot(aes(x = prediction,
fill = PHENOTYPE,
..density..)) +
geom_density(alpha = 0.5) +
xlim(-0.1, 1) +
labs(x = "Genetic susceptibility",
y = "Density")
df_plink_0_001 %>%
ggplot(aes(x = prediction,
fill = PHENOTYPE,
..density..)) +
geom_density(alpha = 0.5) +
xlim(-0.1, 1) +
labs(x = "Genetic susceptibility",
y = "Density") +
# scale_color_manual(values =
#                      c("1" ="darkblue",
#                        "2" = "darkred"))+
scale_fill_discrete(name = NULL,
labels = c("control", "case")) +
theme_bw()
p15 = df_plink_0_001 %>%
ggplot(aes(x = prediction,
fill = PHENOTYPE,
..density..)) +
geom_density(alpha = 0.5) +
xlim(-0.1, 1) +
labs(x = "Genetic susceptibility",
y = "Density") +
# scale_color_manual(values =
#                      c("1" ="darkblue",
#                        "2" = "darkred"))+
scale_fill_discrete(name = NULL,
labels = c("control", "case")) +
theme_bw()
i = "p15"
ggsave(get(i),
file = paste0(i,".png"),
units = "px",
width = 1920,
height = 1080)
ggsave(get(i),
file = paste0(i,".png"), dpi = 300,
units = "px",
width = 1920,
height = 1080)
